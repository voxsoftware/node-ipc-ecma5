/*global describe, expect, it*/
'use strict';

var ipc = require('../../../../node-ipc');

describe('TCP Socket verification of server', function TCPSocketSpec() {
    it('Verify TCP server detects only 1 client out of 2 clients and receives message.', function testIt(done) {
        ipc.config.id = 'testWorld';
        ipc.config.retry = 1000;

        var clientCounter = 0;
        ipc.config.maxConnections = 1;
        ipc.config.networkPort = 8500;

        ipc.serveNet(function serverStarted() {
            ipc.server.on('connect', function connected() {
                clientCounter++;
            });
        });

        setTimeout(function timerDelay() {
            expect(clientCounter).toBe(ipc.config.maxConnections);
            ipc.server.stop();
            done();
        }, ipc.config.retry + ipc.config.retry);

        ipc.server.start();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL25vZGUtaXBjL3NwZWMvc3VwcG9ydC9qYXNtaW5lVGVzdC9UQ1AvdGNwU29ja2V0U2VydmVyLnNwZWMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztBQUVBLElBQU0sTUFBTSxRQUFRLHNCQUFSLENBQU47O0FBRU4sU0FBUyxtQ0FBVCxFQUNJLFNBQVMsYUFBVCxHQUF3QjtBQUNwQixPQUNJLGdGQURKLEVBRUksU0FBUyxNQUFULENBQWdCLElBQWhCLEVBQXFCO0FBQ2pCLFlBQUksTUFBSixDQUFXLEVBQVgsR0FBZSxXQUFmLENBRGlCO0FBRWpCLFlBQUksTUFBSixDQUFXLEtBQVgsR0FBbUIsSUFBbkIsQ0FGaUI7O0FBSWpCLFlBQUksZ0JBQWMsQ0FBZCxDQUphO0FBS2pCLFlBQUksTUFBSixDQUFXLGNBQVgsR0FBMEIsQ0FBMUIsQ0FMaUI7QUFNakIsWUFBSSxNQUFKLENBQVcsV0FBWCxHQUF1QixJQUF2QixDQU5pQjs7QUFRakIsWUFBSSxRQUFKLENBQ0ksU0FBUyxhQUFULEdBQXdCO0FBQ3BCLGdCQUFJLE1BQUosQ0FBVyxFQUFYLENBQ0ksU0FESixFQUVJLFNBQVMsU0FBVCxHQUFvQjtBQUNoQixnQ0FEZ0I7YUFBcEIsQ0FGSixDQURvQjtTQUF4QixDQURKLENBUmlCOztBQW1CakIsbUJBQ0ssU0FBUyxVQUFULEdBQXFCO0FBQ2pCLG1CQUFPLGFBQVAsRUFBc0IsSUFBdEIsQ0FBMkIsSUFBSSxNQUFKLENBQVcsY0FBWCxDQUEzQixDQURpQjtBQUVqQixnQkFBSSxNQUFKLENBQVcsSUFBWCxHQUZpQjtBQUdqQixtQkFIaUI7U0FBckIsRUFLQSxJQUFJLE1BQUosQ0FBVyxLQUFYLEdBQWlCLElBQUksTUFBSixDQUFXLEtBQVgsQ0FOdEIsQ0FuQmlCOztBQTRCakIsWUFBSSxNQUFKLENBQVcsS0FBWCxHQTVCaUI7S0FBckIsQ0FGSixDQURvQjtDQUF4QixDQURKIiwiZmlsZSI6InRjcFNvY2tldFNlcnZlci5zcGVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgZGVzY3JpYmUsIGV4cGVjdCwgaXQqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpcGMgPSByZXF1aXJlKCcuLi8uLi8uLi8uLi9ub2RlLWlwYycpO1xuXG5kZXNjcmliZSgnVENQIFNvY2tldCB2ZXJpZmljYXRpb24gb2Ygc2VydmVyJyxcbiAgICBmdW5jdGlvbiBUQ1BTb2NrZXRTcGVjKCl7XG4gICAgICAgIGl0KFxuICAgICAgICAgICAgJ1ZlcmlmeSBUQ1Agc2VydmVyIGRldGVjdHMgb25seSAxIGNsaWVudCBvdXQgb2YgMiBjbGllbnRzIGFuZCByZWNlaXZlcyBtZXNzYWdlLicsXG4gICAgICAgICAgICBmdW5jdGlvbiB0ZXN0SXQoZG9uZSl7XG4gICAgICAgICAgICAgICAgaXBjLmNvbmZpZy5pZCA9J3Rlc3RXb3JsZCc7XG4gICAgICAgICAgICAgICAgaXBjLmNvbmZpZy5yZXRyeSA9IDEwMDA7XG5cbiAgICAgICAgICAgICAgICBsZXQgY2xpZW50Q291bnRlcj0wO1xuICAgICAgICAgICAgICAgIGlwYy5jb25maWcubWF4Q29ubmVjdGlvbnM9MTtcbiAgICAgICAgICAgICAgICBpcGMuY29uZmlnLm5ldHdvcmtQb3J0PTg1MDA7XG5cbiAgICAgICAgICAgICAgICBpcGMuc2VydmVOZXQoXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNlcnZlclN0YXJ0ZWQoKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlwYy5zZXJ2ZXIub24oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Nvbm5lY3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNvbm5lY3RlZCgpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRDb3VudGVyKys7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KFxuICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gdGltZXJEZWxheSgpe1xuICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdChjbGllbnRDb3VudGVyKS50b0JlKGlwYy5jb25maWcubWF4Q29ubmVjdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIGlwYy5zZXJ2ZXIuc3RvcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICBpcGMuY29uZmlnLnJldHJ5K2lwYy5jb25maWcucmV0cnlcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgaXBjLnNlcnZlci5zdGFydCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH1cbik7XG4iXX0=